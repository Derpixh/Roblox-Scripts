local SoundService = game:GetService("SoundService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")

local BIOME_DETECTIONS = {
    {
        soundId = "rbxassetid://9044565954",
        soundGroup = "PlayerBackgroundMusic",
        message = "Detected Windy Biome!"
    },
    {
        soundId = "rbxassetid://9046862941",
        soundGroup = "PlayerBackgroundMusic",
        message = "Detected Normal Biome!"
    },
    {
        soundId = "rbxassetid://1837667693",
        soundGroup = "BackgroundMusic",
        message = "Detected Null Biome!"
    },
    {
        soundId = "rbxassetid://9043887091",
        soundGroup = "PlayerBackgroundMusic",
        message = "Detected Rainy Biome!"
    },
    {
        soundId = "rbxassetid://1837093849",
        soundGroup = "PlayerBackgroundMusic",
        message = "Detected Hell Biome!"
    }
}

local sentNotifications = {}

local function checkBiomes()
    for soundId, _ in pairs(sentNotifications) do
        local stillPlaying = false
        for _, sound in ipairs(SoundService:GetDescendants()) do
            if sound:IsA("Sound") and sound.IsPlaying and sound.SoundId == soundId then
                local groupName = sound.SoundGroup and sound.SoundGroup.Name or "None"
                for _, biome in ipairs(BIOME_DETECTIONS) do
                    if biome.soundId == soundId and biome.soundGroup == groupName then
                        stillPlaying = true
                        break
                    end
                end
                if stillPlaying then break end
            end
        end
        if not stillPlaying then
            sentNotifications[soundId] = nil
        end
    end
    
    for _, sound in ipairs(SoundService:GetDescendants()) do
        if sound:IsA("Sound") and sound.IsPlaying then
            local soundGroupName = sound.SoundGroup and sound.SoundGroup.Name or "None"
            for _, biome in ipairs(BIOME_DETECTIONS) do
                if sound.SoundId == biome.soundId and soundGroupName == biome.soundGroup then
                    if not sentNotifications[sound.SoundId] then
                        StarterGui:SetCore("SendNotification", {
                            Title = "Biome Detector",
                            Text = biome.message,
                            Duration = 5,
                        })
                        sentNotifications[sound.SoundId] = true
                    end
                    break
                end
            end
        end
    end
end

RunService.Heartbeat:Connect(function()
    checkBiomes()
end)
