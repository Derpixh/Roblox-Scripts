local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local window = Rayfield:CreateWindow({
    Name = "Dandys World - Alpha Hax",
    LoadingTitle = "Loading Assets..",
    LoadingSubtitle = "Created By Derpixh",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "Sirius"
    },
    KeySystem = true,
    KeySettings = {
        Title = "Derpixh's Key System",
        Subtitle = "Enter Your Key",
        Note = "Rate The Features",
        FileName = "Sirius",
        SaveKey = false,
        Key = "2025"
    }
})

local tabTwisteds = window:CreateTab("Twisteds")
local sectionHighlightTwisteds = tabTwisteds:CreateSection("Highlight Twisteds")

local autoHighlightToggle = tabTwisteds:CreateToggle({
    Name = "Auto Highlight Twisteds",
    CurrentValue = false,
    Flag = "AutoHighlight",
    Section = sectionHighlightTwisteds,
    Callback = function(Value)
        _G.AutoHighlight = Value

        local RunService = game:GetService("RunService")
        local function addHighlight(model)
            if not model:FindFirstChildOfClass("Highlight") then
                local highlight = Instance.new("Highlight")
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.Parent = model
            end
        end

        local function removeHighlight(model)
            local highlight = model:FindFirstChildOfClass("Highlight")
            if highlight then
                highlight:Destroy()
            end
        end

        local function checkAndUpdateHighlights()
            local currentRoom = workspace:FindFirstChild("CurrentRoom")
            if currentRoom then
                for _, roomModel in pairs(currentRoom:GetChildren()) do
                    if roomModel:IsA("Model") then
                        local monstersFolder = roomModel:FindFirstChild("Monsters")
                        if monstersFolder then
                            for _, monster in pairs(monstersFolder:GetChildren()) do
                                if monster:IsA("Model") then
                                    if _G.AutoHighlight then
                                        addHighlight(monster)
                                    else
                                        removeHighlight(monster)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end

        RunService.Heartbeat:Connect(checkAndUpdateHighlights)
    end,
})

local sectionShowAlerts = tabTwisteds:CreateSection("Show Alerts")

local autoAlertChasingToggle = tabTwisteds:CreateToggle({
    Name = "Auto Alert Chasing",
    CurrentValue = false,
    Flag = "AutoAlertChasing",
    Section = sectionShowAlerts,
    Callback = function(Value)
        _G.AutoAlertChasing = Value

        local RunService = game:GetService("RunService")
        local Players = game:GetService("Players")
        local localPlayer = Players.LocalPlayer

        local function alertChasing(model)
            local chasingValue = model:FindFirstChild("ChasingValue")
            if chasingValue and chasingValue:IsA("ObjectValue") and chasingValue.Value == localPlayer then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Twisted Alerter",
                    Text = model.Name .. " is currently chasing you",
                    Duration = 5
                })
            end
        end

        local function checkAndAlertChasing()
            if _G.AutoAlertChasing then
                local currentRoom = workspace:FindFirstChild("CurrentRoom")
                if currentRoom then
                    for _, roomModel in pairs(currentRoom:GetChildren()) do
                        if roomModel:IsA("Model") then
                            local monstersFolder = roomModel:FindFirstChild("Monsters")
                            if monstersFolder then
                                for _, monster in pairs(monstersFolder:GetChildren()) do
                                    if monster:IsA("Model") then
                                        alertChasing(monster)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end

        RunService.Heartbeat:Connect(checkAndAlertChasing)
    end,
})
