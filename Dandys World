local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local window = Rayfield:CreateWindow({
    Name = "Dandys World - Alpha Hax",
    LoadingTitle = "Loading Assets..",
    LoadingSubtitle = "Created By Luxx",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "Sirius"
    },
    KeySystem = true,
    KeySettings = {
        Title = "Luxx's Key System",
        Subtitle = "Enter Your Key",
        Note = "Rate The Features",
        FileName = "Sirius",
        SaveKey = false,
        Key = "2025"
    }
})

local twistedsTab = window:CreateTab("Twisteds")
local twistedsSection = twistedsTab:CreateSection("Twisteds")

local highlightToggleEnabled = false

local function removeHighlights()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
    if currentRoom then
        for _, model in ipairs(currentRoom:GetChildren()) do
            if model:IsA("Model") then
                local monstersFolder = model:FindFirstChild("Monsters")
                if monstersFolder then
                    for _, monster in ipairs(monstersFolder:GetChildren()) do
                        if monster:IsA("Model") then
                            local highlight = monster:FindFirstChildOfClass("Highlight")
                            if highlight then
                                highlight:Destroy()
                            end
                        end
                    end
                end
            end
        end
    end
end

local highlightToggle = twistedsTab:CreateToggle({
    Name = "Highlight Twisteds (You Can Enable/Disable It)",
    SectionParent = twistedsSection,
    CurrentValue = false,
    Callback = function(value)
        highlightToggleEnabled = value

        if not value then
            highlightToggleEnabled = false
            removeHighlights()
            return
        end

        while highlightToggleEnabled do
            local currentRoom = workspace:FindFirstChild("CurrentRoom")
            if currentRoom then
                for _, model in ipairs(currentRoom:GetChildren()) do
                    if model:IsA("Model") then
                        local monstersFolder = model:FindFirstChild("Monsters")
                        if monstersFolder then
                            for _, monster in ipairs(monstersFolder:GetChildren()) do
                                if monster:IsA("Model") then
                                    if not monster:FindFirstChildOfClass("Highlight") then
                                        local highlight = Instance.new("Highlight")
                                        highlight.FillColor = Color3.fromRGB(255, 0, 0)
                                        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                                        highlight.Parent = monster
                                    end
                                end
                            end
                        end
                    end
                end
            end
            wait()
        end
    end
})

local notifySection = twistedsTab:CreateSection("Notify")

local autoNotifyEnabled = false
local localPlayer = game:GetService("Players").LocalPlayer

local function monitorChasingValues()
    while autoNotifyEnabled do
        local currentRoom = workspace:FindFirstChild("CurrentRoom")
        if currentRoom then
            for _, model in ipairs(currentRoom:GetChildren()) do
                if model:IsA("Model") then
                    local monstersFolder = model:FindFirstChild("Monsters")
                    if monstersFolder then
                        for _, monster in ipairs(monstersFolder:GetChildren()) do
                            if monster:IsA("Model") then
                                local chasingValue = monster:FindFirstChild("ChasingValue")
                                if chasingValue and chasingValue:IsA("ObjectValue") then
                                    local newValue = chasingValue.Value
                                    
                                    if newValue == localPlayer and monster:GetAttribute("Notified") ~= true then
                                        Rayfield:Notify({
                                            Title = "Twisted Chasing Notifier",
                                            Content = monster.Name .. " is currently chasing you!",
                                            Duration = 3
                                        })
                                        monster:SetAttribute("Notified", true)

                                    elseif newValue == nil and monster:GetAttribute("Notified") == true then
                                        Rayfield:Notify({
                                            Title = "Twisted Chasing Notifier",
                                            Content = monster.Name .. " has stopped chasing you!",
                                            Duration = 3
                                        })
                                        monster:SetAttribute("Notified", false)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        wait()
    end
end

local autoNotifyToggle = twistedsTab:CreateToggle({
    Name = "Auto Notify Twisteds (When It Chases You)",
    SectionParent = notifySection,
    CurrentValue = false,
    Callback = function(value)
        autoNotifyEnabled = value
        
        if not value then
            return
        end

        monitorChasingValues()
    end
})
