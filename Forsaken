local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local window = Rayfield:CreateWindow({
    Name = "Forsaken - Alpha Hax",
    LoadingTitle = "Loading Assets..",
    LoadingSubtitle = "Created By Luxx",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "Sirius"
    },
    KeySystem = true,
    KeySettings = {
        Title = "Luxx's Key System",
        Subtitle = "Enter Your Key",
        Note = "Rate The Features",
        FileName = "Sirius",
        SaveKey = false,
        Key = "2025"
    }
})

local generatorsTab = window:CreateTab("Generators")
local autoCompleteSection = generatorsTab:CreateSection("Auto Complete")

local PROXIMITY_DISTANCE = 15
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local playerGui = player:WaitForChild("PlayerGui")
local connection

local function locateObjects()
    local mapFolder = workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
    local generators = {}

    for _, obj in ipairs(mapFolder:GetChildren()) do
        if obj:IsA("Model") and obj.Name == "Generator" then
            local remotes = obj:FindFirstChild("Remotes")
            local remoteEvent = remotes and remotes:FindFirstChild("RE")
            if remoteEvent and remoteEvent:IsA("RemoteEvent") then
                table.insert(generators, { model = obj, remote = remoteEvent })
            end
        end
    end

    return generators
end

local function getNearestGenerator(generators, position)
    local nearest, shortestDistance = nil, math.huge

    for _, entry in ipairs(generators) do
        local genPos = entry.model:GetModelCFrame().Position
        local distance = (genPos - position).Magnitude

        if distance < shortestDistance then
            shortestDistance, nearest = distance, entry
        end
    end

    return nearest and shortestDistance <= PROXIMITY_DISTANCE and nearest or nil
end

local function monitorPuzzleUI()
    local generators = locateObjects()

    while connection do
        wait()
        local puzzleUI = playerGui:FindFirstChild("PuzzleUI")

        if puzzleUI and puzzleUI:IsA("ScreenGui") and puzzleUI.Enabled then
            local nearestGen = getNearestGenerator(generators, humanoidRootPart.Position)
            if nearestGen then
                nearestGen.remote:FireServer()
            end
        end
    end
end

local autoCompleteToggle = generatorsTab:CreateToggle({
    Name = "Auto Complete Generators",
    CurrentValue = false,
    SectionParent = autoCompleteSection,
    Callback = function(state)
        if state then
            Rayfield:Notify({ Title = "Success!", Content = "Auto Complete Generators Enabled!" })
            connection = task.spawn(monitorPuzzleUI)
        else
            Rayfield:Notify({ Title = "Success!", Content = "Auto Complete Generators Disabled!" })
            if connection then
                task.cancel(connection)
                connection = nil
            end
        end
    end
})

Rayfield:LoadConfiguration()
