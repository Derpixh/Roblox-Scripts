local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local window = Rayfield:CreateWindow({
    Name = "Forsaken - Alpha Hax",
    LoadingTitle = "Loading Assets..",
    LoadingSubtitle = "Created By Luxx",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "Sirius"
    },
    KeySystem = true,
    KeySettings = {
        Title = "Luxx's Key System",
        Subtitle = "Enter Your Key",
        Note = "Rate The Features",
        FileName = "Sirius",
        SaveKey = false,
        Key = "2025"
    }
})

local generatorsTab = window:CreateTab("Generators")
local autoCompleteSection = generatorsTab:CreateSection("Auto Complete")

local PROXIMITY_DISTANCE = 15
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local playerGui = player:WaitForChild("PlayerGui")

local function getNearestGenerator()
    local mapFolder = workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
    local nearestGen, shortestDistance = nil, math.huge

    for _, obj in ipairs(mapFolder:GetChildren()) do
        if obj:IsA("Model") and obj.Name == "Generator" then
            local genPos = obj:GetModelCFrame().Position
            local distance = (genPos - humanoidRootPart.Position).Magnitude

            if distance < shortestDistance and obj:FindFirstChild("Remotes") and obj.Remotes:FindFirstChild("RE") then
                shortestDistance = distance
                nearestGen = obj
            end
        end
    end

    return (nearestGen and shortestDistance <= PROXIMITY_DISTANCE) and nearestGen or nil
end

local connection

local autoCompleteToggle = generatorsTab:CreateToggle({
    Name = "Auto Complete Generators",
    CurrentValue = false,
    SectionParent = autoCompleteSection,
    Callback = function(state)
        if state then
            Rayfield:Notify({ Title = "Success!", Content = "Auto Complete Generators Enabled!" })
            connection = task.spawn(function()
                while true do
                    wait(1)
                    local puzzleUI = playerGui:FindFirstChild("PuzzleUI")

                    if puzzleUI and puzzleUI:IsA("ScreenGui") and puzzleUI.Enabled then
                        local nearestGen = getNearestGenerator()
                        if nearestGen then
                            nearestGen:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
                        end
                    end
                end
            end)
        else
            Rayfield:Notify({ Title = "Success!", Content = "Auto Complete Generators Disabled!" })
            if connection then
                task.cancel(connection)
                connection = nil
            end
        end
    end
})

Rayfield:LoadConfiguration()
