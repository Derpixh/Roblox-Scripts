local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local window = Rayfield:CreateWindow({
    Name = "Slap Battles - Alpha Hax",
    LoadingTitle = "Loading Assets..",
    LoadingSubtitle = "Created By Derpixh",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "Sirius"
    },
    KeySystem = true,
    KeySettings = {
        Title = "Derpixh's Key System",
        Subtitle = "Enter Your Key",
        Note = "Rate The Features",
        FileName = "Sirius",
        SaveKey = false,
        Key = "2025"
    }
})

local lobbyTab = window:CreateTab("Lobby")

local arenasSection = lobbyTab:CreateSection("Arenas")

local toggleState = false
local defaultToggleState = false

local autoArenaToggle
autoArenaToggle = lobbyTab:CreateToggle({
    Name = "Auto Arena",
    SectionParent = arenasSection,
    State = false,
    Callback = function(state)
        toggleState = state
        if toggleState then
            local function interactWithTouchTransmitter()
                local localPlayer = game.Players.LocalPlayer
                local playerModel = workspace:FindFirstChild(localPlayer.Name)
                if playerModel then
                    local lobby = workspace:FindFirstChild("Lobby")
                    if lobby then
                        local teleportPart = lobby:FindFirstChild("Teleport1")
                        if teleportPart then
                            local touchTransmitter = teleportPart:FindFirstChild("TouchInterest")
                            if touchTransmitter then
                                firetouchinterest(localPlayer.Character.HumanoidRootPart, teleportPart, 0)
                            end
                        end
                    end
                end
            end

            autoArenaConnection = game:GetService("RunService").RenderStepped:Connect(function()
                interactWithTouchTransmitter()
            end)
        else
            if autoArenaConnection then
                autoArenaConnection:Disconnect()
            end
        end
    end
})

local autoDefaultArenaToggle
autoDefaultArenaToggle = lobbyTab:CreateToggle({
    Name = "Auto Default Arena",
    SectionParent = arenasSection,
    State = false,
    Callback = function(state)
        defaultToggleState = state
        if defaultToggleState then
            local function interactWithDefaultTouchTransmitter()
                local localPlayer = game.Players.LocalPlayer
                local playerModel = workspace:FindFirstChild(localPlayer.Name)
                if playerModel then
                    local lobby = workspace:FindFirstChild("Lobby")
                    if lobby then
                        local teleportPart = lobby:FindFirstChild("Teleport2")
                        if teleportPart then
                            local touchTransmitter = teleportPart:FindFirstChild("TouchInterest")
                            if touchTransmitter then
                                firetouchinterest(localPlayer.Character.HumanoidRootPart, teleportPart, 0)
                            end
                        end
                    end
                end
            end

            autoDefaultArenaConnection = game:GetService("RunService").RenderStepped:Connect(function()
                interactWithDefaultTouchTransmitter()
            end)
        else
            if autoDefaultArenaConnection then
                autoDefaultArenaConnection:Disconnect()
            end
        end
    end
})

local gameModesSection = lobbyTab:CreateSection("Game Modes")

local killstreakButton = lobbyTab:CreateButton({
    Name = "Teleport To Killstreak Only",
    SectionParent = gameModesSection,
    Callback = function()
        local localPlayer = game.Players.LocalPlayer
        local lobby = workspace:FindFirstChild("Lobby")
        if lobby then
            local teleportPart = lobby:FindFirstChild("Teleport6")
            if teleportPart then
                local touchTransmitter = teleportPart:FindFirstChild("TouchInterest")
                if touchTransmitter then
                    firetouchinterest(localPlayer.Character.HumanoidRootPart, teleportPart, 0)
                end
            end
        end
    end
})

local slapRoyaleButton = lobbyTab:CreateButton({
    Name = "Teleport To Slap Royale",
    SectionParent = gameModesSection,
    Callback = function()
        local localPlayer = game.Players.LocalPlayer
        local lobby = workspace:FindFirstChild("Lobby")
        if lobby then
            local teleportPart = lobby:FindFirstChild("Teleport4")
            if teleportPart then
                local touchTransmitter = teleportPart:FindFirstChild("TouchInterest")
                if touchTransmitter then
                    firetouchinterest(localPlayer.Character.HumanoidRootPart, teleportPart, 0)
                end
            end
        end
    end
})

local noOneshotGlovesButton = lobbyTab:CreateButton({
    Name = "Teleport To No Oneshot Gloves Server",
    SectionParent = gameModesSection,
    Callback = function()
        local localPlayer = game.Players.LocalPlayer
        local lobby = workspace:FindFirstChild("Lobby")
        if lobby then
            local teleportPart = lobby:FindFirstChild("Teleport3")
            if teleportPart then
                local touchTransmitter = teleportPart:FindFirstChild("TouchInterest")
                if touchTransmitter then
                    firetouchinterest(localPlayer.Character.HumanoidRootPart, teleportPart, 0)
                end
            end
        end
    end
})

local brazilSection = lobbyTab:CreateSection("Brazil")

local teleportToBrazilButton = lobbyTab:CreateButton({
    Name = "Teleport To Brazil",
    SectionParent = brazilSection,
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local portal = workspace.Lobby.brazil.portal

        local function fireTouch()
            if portal and portal:FindFirstChild("TouchInterest") then
                firetouchinterest(character.HumanoidRootPart, portal, 0)
            end
        end

        fireTouch()
    end
})

local eludeKeypadSection = lobbyTab:CreateSection("Elude Keypad")

local autoNotifyKeypadToggle = lobbyTab:CreateToggle({
   Name = "Auto Notify Keypad",
   CurrentValue = false,
   Flag = "AutoNotifyKeypad",
   Callback = function(Value)
       local runService = game:GetService("RunService")
       local connection

       if Value then
           local keypadExists = false
           connection = runService.Stepped:Connect(function()
               local keypad = workspace:FindFirstChild("Keypad")

               if keypad and not keypadExists then
                   game.StarterGui:SetCore("SendNotification", {
                       Title = "Keypad Notifier",
                       Text = "Keypad Found!",
                       Duration = 5
                   })
                   keypadExists = true
               elseif not keypad and keypadExists then
                   game.StarterGui:SetCore("SendNotification", {
                       Title = "Keypad Notifier",
                       Text = "Keypad Has Despawned!",
                       Duration = 5
                   })
                   keypadExists = false
               end
           end)
       else
           if connection then
               connection:Disconnect()
           end
       end
   end
})

local getKeypadCodeButton = lobbyTab:CreateButton({
    Name = "Get Keypad Code",
    SectionParent = eludeKeypadSection,
    Callback = function()
        local function getCodeByPlayerCount(playerCount)
            local codes = {
                [1] = 1118, [2] = 1143, [3] = 1168, [4] = 1193, [5] = 1218,
                [6] = 1243, [7] = 1268, [8] = 1293, [9] = 1318, [10] = 1343,
                [11] = 1368, [12] = 1393, [13] = 1418, [14] = 1443, [15] = 1468,
                [16] = 1493
            }
            return codes[playerCount]
        end

        local Players = game:GetService("Players")
        local playerCount = #Players:GetPlayers()
        local code = getCodeByPlayerCount(playerCount)

        if code then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Elude Keypad Code",
                Text = code .. " is the code!",
                Duration = 5
            })
        end
    end
})

local arenaTab = window:CreateTab("Arena")
local slapplesSection = arenaTab:CreateSection("Slapples")

local toggleState = false

local autoCollectSlapplesToggle
autoCollectSlapplesToggle = arenaTab:CreateToggle({
    Name = "Auto Collect Slapples (MUST BE IN ARENA)",
    SectionParent = slapplesSection,
    State = false,
    Callback = function(state)
        toggleState = state
        if toggleState then
            local function collectSlapples()
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local slappleFolder = workspace.Arena.island5:FindFirstChild("Slapples")

                if slappleFolder then
                    for _, slapple in pairs(slappleFolder:GetChildren()) do
                        if slapple:IsA("Model") and slapple.Name == "Slapple" then
                            local glove = slapple:FindFirstChild("Glove")
                            if glove and glove:IsA("MeshPart") then
                                local touchTransmitter = glove:FindFirstChild("TouchInterest")
                                if touchTransmitter then
                                    firetouchinterest(character.HumanoidRootPart, glove, 0)
                                    slapple.AncestryChanged:Wait()
                                end
                            end
                        end
                    end
                end
            end

            autoCollectConnection = game:GetService("RunService").RenderStepped:Connect(function()
                collectSlapples()
            end)
        else
            if autoCollectConnection then
                autoCollectConnection:Disconnect()
            end
        end
    end
})

local badgesTab = window:CreateTab("Badges")
local brickSection = badgesTab:CreateSection("Brick")

local autoPlaceBricksToggle = badgesTab:CreateToggle({
    Name = "Auto Place Bricks (You Can Get Trap)",
    SectionParent = brickSection,
    CurrentValue = false,
    Flag = "AutoPlaceBricks",
    Callback = function(Value)
        local active = Value

        if active then
            task.spawn(function()
                while active do
                    local playerGui = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
                    if playerGui then
                        local brickCountGui = playerGui:FindFirstChild("BRICKCOUNT")
                        if brickCountGui then
                            local imageLabel = brickCountGui:FindFirstChild("ImageLabel")
                            if imageLabel then
                                local textLabel = imageLabel:FindFirstChild("TextLabel")
                                if textLabel and tonumber(textLabel.Text) then
                                    local brickCount = tonumber(textLabel.Text)
                                    if brickCount < 1000 then
                                        game:GetService("ReplicatedStorage"):WaitForChild("lbrick"):FireServer()
                                        task.wait(5)
                                    else
                                        break
                                    end
                                end
                            end
                        end
                    end
                    task.wait(0.01)
                end
            end)
        else
            active = false
        end
    end
})
